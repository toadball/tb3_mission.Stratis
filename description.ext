#include "tb3\defines.hpp"

	/* Adds screen when loading. */
	author = Toadball;
	onLoadName = "TB3_Mission";
	loadScreen = "tb3\uoLogo.jpg";
	onLoadMission = "Work In Progress";	
	onLoadMissionTime = true;
	respawn = "BASE"; //Gonnae no change this pal
	respawnDelay = 5;
	respawnDialog = 1;
	respawnOnStart = -1;
	//respawnTemplatesWest[] = {"tb3_tracking"};
	//respawnTemplatesEast[] = {"tb3_tracking"};
	//respawnTemplatesGuer[] = {"tb3_tracking"};
	//respawnTemplatesCiv[] = {"tb3_tracking"};
	//respawnTemplatesVirtual[] = {}; // Virtual players, used mainly in Curator missions
	disabledAI = 0;
	ShowGPS = 1;
	enableDebugConsole = 1; //2 for all, 1 for logged in only, 0 for disabled. Honestly best keeping this at 1 makes the most sense.
	
	class Header {
		gameType = Coop;            //DM, Team, Coop, CTI
		minPlayers = 1;             //min # of players the mission supports
		maxPlayers = 8;            //Max # of players the mission supports
		playerCountMultipleOf = 1; //Unknown
	};
	class Extended_PreInit_EventHandlers {
		class tb3 {
			init = "call compile preprocessFileLineNumbers 'tb3\preInit.sqf'";
		};
	};
	class CfgSettings {
		class CBA {
			class Caching {
				compile = 0;
				xeh = 0;
				functions = 0;
			};
		};
	};
	

	class TB3_Settings {
		class General {
			version = 816;
			processParams = 1; //run code set in the code variable of param classes
			enableSaving = 0; //enable(1)/disable(0) saving in editor
			missionMonitor = 1; //monitor casualties on the server
			dynamicViewDistance = 1;
			spectator = 1;  //0 off, 1 default on: no respawn w/ spectator, 2 spectator activated by variable switch
			enableFlexiMenu = 0; // TO BE MOVED TO OTHER AREA CBA Fleximenu options on(1) or off (0) - Misnomer as per 816 this uses ACE interact which is presently no longer the same as CBA fleximenu
			jipTeleport = 1; // Because JIPs are fucking lazy shites.
		};
		class MissionMonitor {
			initDelay 			= 5; 		// delay (in secs) before starting the mission monitor
			updateDelay 		= 2; 		// delay (in secs) between each update
		}; 
		class SkillSettings {
			class Profiles {
				class Example {
					type = "O_Soldier_base_F"; //String: use the class name of the unit that this profile will apply to, if using side leave an empty string.
					//Subskills below: Scalar from 0.2 to 1 if you want to ignore a setting use 0
					aimingAccuracy = 0.5; //Affects how well the AI can lead a target, Affects how accurately the AI estimate range and calculates bullet drop, Affects how well the AI compensates for weapon dispersion, Affects how much the AI will know to compensate for recoil (Higher value = more controlled fire), Affects how certain the AI must be about its aim on target before opening fire
					aimingShake = 0.5; //Affects how steadily the AI can hold a weapon (Higher value = less weapon sway)
					aimingSpeed = 0.5; //Affects how quickly the AI can rotate and stabilize its aim (Higher value = faster, less error)
					spotDistance = 0.5; //Affects the AI ability to spot targets within it's visual or audible range (Higher value = more likely to spot), Affects the accuracy of the information (Higher value = more accurate information)
					spotTime = 0.5; //Affects how quick the AI react to death, damage or observing an enemy (Higher value = quicker reaction)
					courage = 0.5; //Affects unit's subordinates' morale (Higher value = more courage, 0.2 for DA simulation)
					reloadSpeed = 0.5; //Affects the delay between switching or reloading a weapon (Higher value = less delay)
					commanding = 0.5; //Affects how quickly recognized targets are shared with the group (Higher value = faster reporting)
					general = 0.5; //Raw "Skill", value is distributed to sub-skills unless defined otherwise. Affects the AI's decision making.
				};
				class Example2 {
					type = "O_Soldier_base_F";
					aimingAccuracy = 0.4;
					aimingShake = 0.5;
					aimingSpeed = 0.7;
					spotDistance = 0.8;
					spotTime = 0.6;
					courage = 0.5;
					reloadSpeed = 0.5;
					commanding = 0.25;
					general = 0.4;
				};
			};
		};
		class ACRE2 {
			//If you are using TB3's babel implementation do not add in your own definitions elsewhere
			//as conflicts may occur as a result, particularly when setting the types of languages available.
			//It is possible to hook into some of TB3's babel implementation even if you are not using it to define
			//spoken languages or available language types.
			babelEnabled = 1;
			babelLanguages[] = {
				{"english","English"},
				{"altian","Altian"},
				{"french","Francais"}
			//spoken languages defined in unit loadout, shouldn't matter about AI you're not speaking with them you silly person
			};
		};
	};	

#include "tb3\f\loadout\defines.hpp"

class CfgDebriefing {  
	class End0 {
		title = "Mission Over";
		subtitle = "Objective Secured with few casualties.";
		description = "Objective Completed with few casualties";
		pictureBackground = "";
		picture = "b_inf";
		pictureColor[] = {0.0,0.3,0.6,1};
		condition[] = {((IND_Obj1Flag1 && IND_Obj1Flag2) && (RCasRate < 15))}; //boolean check that will trigger this ending
	};
	class End1 {
		title = "Mission Over";
		subtitle = "Objective Secured with some casualties.";
		description = "Objective Completed with some casualties";
		pictureBackground = "";
		picture = "b_inf";
		pictureColor[] = {0.0,0.3,0.6,1};
		condition[] = {((IND_Obj1Flag1 && IND_Obj1Flag2) && (RCasRate < 30) && (RCasRate > 15))}; //boolean check that will trigger this ending
	};
	class End2 {
		title = "Mission Failed";
		subtitle = "Objective Secured with excessive casualties.";
		description = "Objective 2 Complete";
		pictureBackground = "";
		picture = "waypoint";
		pictureColor[] = {1.0,0.0,0.0,1};
		condition[] = {((IND_Obj1Flag1 && IND_Obj1Flag2) && (RCasRate > 30))}; //boolean check that will trigger this ending
	};	
	/*class DiffifcultyENDEX {
		title = "Bad Difficulty Setting";
		subtitle = "Reload mission at Veteran or Elite difficulty.";
		description = "Reload mission at Veteran or Elite difficulty.";
		pictureBackground = "";
		picture = "waypoint";
		pictureColor[] = {0.0,0.0,0.0,0};
		condition[] = {(difficulty < 2)};
	};*/
	class ENDEX {
		title = "Mission Ended by Admin";
		subtitle = "";
		description = "Mission Ended by Admin";
		pictureBackground = "";
		picture = "waypoint";
		pictureColor[] = {0.0,0.0,0.0,0};
		condition[] = {(tb3_adminEndex)};
	};
};

class CfgRespawnTemplates {
	// Class used in respawnTemplates entry
	class tb3_tracking {
		// Function or script executed upon death. Parameters passed into it are the same as are passed into onPlayerKilled.sqf file [<oldUnit>, <killer>, <respawn>, <respawnDelay>]
		onPlayerKilled = "\myAddon\scripts\respawnBeacon.sqf";
		// Function or script executed upon respawn. Parameters passed into it are the same as are passed into onPlayerRespawn.sqf file [<newUnit>, <oldUnit>, <respawn>, <respawnDelay>]
		onPlayerRespawn = "\myAddon\scripts\respawnBeacon.sqf";
		// Default respawn delay (can be overwitten by description.ext entry of the same name)
		respawnDelay = 3;
		// 1 to respawn player when he joins the game. Available only for INSTANT and BASE respawn types
		// Can be overridden by description.ext attribute of the same name
		respawnOnStart = -1;
	};
};
	
class Params {
	class Spacer0  PARAM("");
	class Spacer1  PARAM("View Distance:");
	
	class ClientViewDistance {	
		title 		= " Client (default)";
		values[] 	= { 600, 1200, 1500, 2000, 2500, 3000 };
		texts[] 	= { "0.6 km", "1.2 km", "1.5 km", "2 km", "2.5 km", "3km" };
		default 	= 2000;
		code 		= "if (!isDedicated) then {setViewDistance %1; tb3_defaultVD = %1;};";
	};
	
	class ServerViewDistance {	
		title 		= " Server";
		values[] 	= { 600, 1200, 1500, 2000, 2500, 3000 };
		texts[] 	= { "0.6 km", "1.2 km", "1.5 km", "2 km", "2.5 km", "3km" };
		default 	= 2000;
		code 		= "if (isDedicated) then {setViewDistance %1; tb3_defaultVD = %1;}; ";
	};
	
	class GlobalViewDistance {	
		title 		= " Client and Server";
		values[] 	= { 600, 1200, 1500, 2000, 2500, 3000 };
		texts[] 	= { "0.6 km", "1.2 km", "1.5 km", "2 km", "2.5 km", "3km" };
		default 	= 1200;
		code 		= "if (!isDedicated) then {setViewDistance %1; tb3_defaultVD = %1;}; if (isDedicated) then {setViewDistance %1; tb3_defaultVD = %1;}; ";
	};
	
	class HeliViewDistance {	
		title 		= " Heli";
		values[] 	= { 2000 , 2500 , 3000, 3500, 4000, 4500, 5000, 5500 };
		texts[] 	= { "2 km", "2.5 km", "3 km", "3.5 km", "4 km", "4.5 km", "5 km", "5.5 km" };
		default 	= 4000;
		code 		= "tb3_heliVD = %1";
	};
	
	class PlaneViewDistance {	
		title 		= " Plane";
		values[] 	= { 2000 , 2500 , 3000, 3500, 4000 };
		texts[] 	= { "2 km", "2.5 km", "3 km", "3.5 km", "4 km" };
		default 	= 3000;
		code 		= "tb3_planeVD = %1";
	};
	
	class ArmorViewDistance {	
		title 		= " Armor";
		values[] 	= { 2000 , 2500 , 3000, 3500, 4000 };
		texts[] 	= { "2 km", "2.5 km", "3 km", "3.5 km", "4 km" };
		default 	= 3000;
		code 		= "tb3_armorVD = %1;";
	};
	
	class Spacer2  PARAM("");
	class Spacer3  PARAM("Environment Settings:");
	
	class TimeOfDay	{	
		title 		= " Time of Day"; // 9999 is reserved for random weather
		values[] 	= { 9999, 0500, 0515, 0530, 0545, 0600, 0615, 0630, 0645, 0700, 0900, 1200, 1500, 1700, 1715, 1730, 1745, 1800, 1815, 1830, 1845, 1900 }; // 9999 is reserved for random time
		texts[] 	= { "Random", "0500", "0515", "0530", "0545", "0600", "0615", "0630", "0645", "0700", "0900", "1200", "1500", "1700", "1715", "1730", "1745", "1800", "1815", "1830", "1845", "1900" };
		default 	= 1500;
		code 		= "if (isServer) then {[%1] call compile (preprocessFileLineNumbers 'tb3\s\setTime.sqf')}";
	};   
	
	class Grass {
		title 		= " Grass Setting";
		values[] 	= { 50, 25, 12.5 };
		texts[] 	= {"None", "Low", "Normal"};
		default 	= 25;
		code 		= "setTerrainGrid %1";
	};
	
	class Spacer4  PARAM("");
	class Spacer5  PARAM("Mission Settings:");
	
	class TimeLimit 
	{
		title 		= " Time Limit";
		values[] 	= { 1800, 2400, 3000, 3600, 4200, 4800, 5400, 6000, 6600, 7200, 999999 }; // seconds
		texts[] 	= { "30 minutes", "40 minutes", "50 minutes", "60 minutes", "70 minutes", "80 minutes", "90 minutes", "100 minutes", "110 minutes", "120 minutes", "No limit"};
		default 	= 5400;
		code 		= "timeLimit = %1";
	};
};
	
